# TODO - Workload Wizard: Org-Scoped User & Staff Management (Day Plan)

## 🎯 Goal by EOD
Be able to log in as an orgadmin and manage only users and staff within their organisation, with scoped access enforced via Clerk + Convex.

## 🔐 1. Clerk Metadata Verification
- [x] Confirm invited users are being created with publicMetadata.organisationId
- [x] Confirm publicMetadata.role is set (e.g. orgadmin, sysadmin, developer, user, trial)
- [x] Confirm publicMetadata.organisationId is set when users are created
- [x] Display organisationId and role in console or UI (via useUser())
- [x] Add a dropdown to assign organisation during user invite

## 👥 2. Organisation-Scoped User Management (/organisation/users)
- [x] Add edit user functionality to UsersList component
- [x] Create EditUserForm component with role, status, organisation, and password editing
- [x] Update userActions.ts to handle password changes and detailed audit logging
- [x] Update both Clerk and Convex when user is edited
- [x] Create new route: /organisation/users/page.tsx
- [x] List users where user.publicMetadata.organisationId === currentUser.organisationId
- [x] Display:
  - Full name
  - Email
  - Role
- [x] Add server action: getUsersByOrganisationId()
- [x] Add button to remove/deactivate user (optional)
- [x] Add way for orgadmins to still see deactivated users so they can still reactivate them
- [x] Add confirmation dialog when deactivating a user
- [x] Add a way to reactivate a user for orgadmins
- [x] Add way for dev/sysadmin to login as different users using .env.local username and password variables
- [x] Add edit organisation functionality to user organisation management on /admin/organisations
- [x] Add function for orgadmin to add users and edit users within their organisation/users

## 🧑‍🏫 3. Organisation-Scoped Staff Management (/staff)
- [x] Create /organisation/page.tsx (organisation admin panel)
- [ ] Use Convex query to list lecturer_profiles by organisationId
- [ ] Display:
  - Full name
  - Email
  - Contract type
  - FTE
  - Max teaching hours
- [ ] Add "Add Lecturer" button (ShadCN dialog)
- [ ] Create Convex mutation to add new lecturer

## 🧠 4. Convex Data Scoping Enforcement
- [ ] Ensure all queries/mutations include and filter by organisationId
- [ ] Create helper: getUserOrgOrThrow() in lib/auth/
- [ ] Prevent actions from users without an organisationId
- [ ] Protect against cross-org access

## 🔒 5. Role & Route-Based Protection
- [ ] Update /admin/* to restrict to sysadmin or dev
- [ ] Restrict /organisation/* to users with:
  - role === orgadmin
  - Matching organisationId
- [ ] Create or reuse middleware to enforce this
- [ ] Add a generic /unauthorised page

## 🧑‍💻 Git Workflow
- [ ] git checkout dev
- [ ] git pull
- [ ] git checkout -b feature/org-scoped-management

## 🧪 Optional Extras (Stretch Goals)
- [x] Add dropdown to assign organisation during user invite
- [x] Implement last sign-in tracking and display
- [ ] Display number of users per organisation in admin view
- [ ] Write audit log entries:
  - user.invited
  - staff.created
  - user.deleted

## ✅ Expected Outcome by End of Day
Orgadmins can log in and:
- View and manage only their users
- View and add lecturers for their organisation
- Cannot access other organisations' data
- All Convex logic respects organisationId
- Role-based route protection is working 