# ⏭️ Tomorrow’s Tasks (towards MVP)

1) Lecturer assignment dialog (finish)
   - Show computed hours preview from module credits before submit
   - Validate override hours; surface errors via toast; keep dialog state stable on failure
   - Ensure audit entries on assign/remove; confirm staff totals update instantly

2) Lecturer profiles (edit/deactivate)
   - Add edit form at `src/app/staff/[id]/page.tsx` (inline or modal)
   - Deactivate/reactivate actions; permission gate; audit on changes
   - Optional: link to Clerk user if `email` matches; display linked status

3) Iteration details page
   - New page consolidating groups + allocations (breadcrumbs, AY-aware)
   - CRUD: create group; assign/unassign lecturer; show allocations table
   - Route: `src/app/courses/[id]/iterations/[iterationId]/page.tsx` (or `/iterations/[id]`) and reuse existing Convex queries

4) Course & module management UIs
   - Add edit/delete for course and module with confirm modals
   - Wire to Convex `courses.update/remove`, `modules.update/remove`; audit all
   - Optimistic UI; surface server errors with toast

5) Feature flags admin page (MVP)
   - List current flags and user overrides; toggle via `/api/admin/flags/toggle`
   - Read overrides from Convex; show effective value; permission gate to admins

6) Permission-aware UI states
   - Centralize gating util for org vs system roles; disable/hide forbidden actions
   - Ensure 403 routes redirect to `/unauthorised`; toast on client-denied actions

7) Error handling pass
   - Wrap all mutations in try/catch; show `useToast` errors; no stale loading states

8) Ops
   - Expose a safe trigger to run `permissions.seedPlanningMvpPermissions` in non-dev
   - Add a short admin-only button on `/admin/permissions` (guarded)

9) Tests (targeted)
   - Unit: permissions for orgadmin bypass vs granular perms
   - Unit: allocations compute totals math
   - Smoke: create course→year→module→iteration→group→assign (Vitest happy path)

— Keep existing sections below for broader roadmap and manual testing.

# ✅ Today’s MVP Sprint (foundations → first allocations)

> **Outcome by EOD:** you can create a course + year, attach modules, create an iteration for the current academic year, make groups, and allocate a lecturer — with year visibility (draft vs published) enforced.

---

## Next UI tasks

**Enhance lecturer assignment**

* Show computed hours preview from module credits before submit
* Show existing allocations list per group (with remove/edit)

**Lecturer profiles UI**

* Create/list/edit lecturer profiles (feeds assignment dialog)

**Course/module management**

* Add edit/delete UI with confirmations and audits

**Iteration details**

* Dedicated page consolidating groups and allocations

**Feature flags admin page**

* List user overrides and allow toggling (reads/writes Convex overrides)

**Permission-aware UI states**

* Disable/hide actions based on role/permissions

**Error handling**

* Add error toasts for mutation failures

**Staff capacity UX**

* Visual bars and filters on `/staff` once contracts/max hours populated

**Ops**

* Run `permissions.seedPlanningMvpPermissions` in non-dev envs

## Later / roadmap

- Lecturer profiles
  - Edit profile page (all fields), deactivate/reactivate
  - Avatar sync (if linked user), link profile ⇄ user
  - Per-lecturer admin allocations table (create/edit/remove)

- Allocations
  - Profile page: module allocations table (scoped to selected AY), sort/filter/export CSV
  - Group allocations: inline edit hours, bulk assign/remove, totals by module and course
  - Iteration details page: full groups & allocations management with summaries

- Courses & Modules
  - Edit/delete UIs with confirmations and optimistic updates
  - Module code uniqueness surfaces as inline validation

- Organisations & Roles
  - Move user between organisations; multi-org membership UX
  - Role assignment UI improvements (multi-select, search), show effective permissions
  - Replace orgadmin bypass with seeded granular perms for orgadmin

- Academic Years
  - Server preference to persist selected AY per user (beyond localStorage)
  - Year cloning and bulk status changes

- Feature flags
  - Admin page: list all flags, per-user overrides, optional org overrides, rollout % controls

- Quality
  - Error toasts standardised; zod validation across forms
  - Playwright E2E for core flows; snapshot key pages
  - Metrics: capture key events (create/update/delete) and allocation changes

## Testing checklist (manual)

- Lecturer assignment dialog
  - Opens and loads groups for selected iteration and lecturers for org
  - Computed hours preview matches module credits; override saves and persists
  - Allocation appears in table; Remove deletes and audit entry is written
  - Permission gating: orgadmin/manager can assign; lecturer-only user cannot

- Lecturer profiles UI
  - Create profile; appears in assignment list; edit and deactivate works
  - Permission gating enforced; audit entries on create/update/delete

- Course/module management
  - Edit/delete course and module with confirmations; uniqueness errors surface
  - Audits on create/update/delete; permissions enforced server and UI

- Iteration details page
  - Lists groups and allocations; create group; assign/remove lecturer
  - Respects selected academic year; switching AY updates lists

- Feature flags admin
  - Toggle writes via `/api/admin/flags/toggle` to Convex overrides
  - `getFlags()` reflects override for current user; audit `flags.updated` exists
  - Non-admin access is denied (redirects/403)

- Permission-aware UI states
  - As sysadmin/orgadmin: all actions enabled; as lecturer/viewer: actions disabled/hidden
  - Server still blocks forbidden actions (verify error surfaced as toast)

- Error handling
  - Simulate bad input/network; toasts show errors; no partial/dirty UI states remain

- Staff capacity UX
  - Bars update after allocations; thresholds show green/amber/red appropriately
  - Basic filter/sort (if present) updates the list correctly

- E2E smoke flow
  - Switch to published AY; create course and Year 1; create module and attach to year
  - Create iteration for selected AY; create a group; assign lecturer; verify in `/staff`

## 9) Release to dev preview

```bash
git checkout dev
git pull
# merge PRs should already have gone in step-by-step
# Vercel preview should build automatically from dev
```

**Tag (optional):**

```bash
git tag v0.3.1-mvp-slice-1
git push origin v0.3.1-mvp-slice-1
```

---

## ✅ Definition of Done (today)

* You can:

  * switch to **AY 25/26** and **see** content as staff;
  * keep **AY 26/27** in **draft** visible only to management.
* Create **Course → Year → Module → Iteration → Groups**.
* Allocate a **Lecturer** to a **Group** and see hours reflected in **/staff** totals.
