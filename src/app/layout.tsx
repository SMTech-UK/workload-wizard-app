import type { Metadata } from "next";
import { ClerkProvider } from "@clerk/nextjs";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/globals.css";
import { ConvexClientProvider } from "@/components/providers/ConvexProvider";
import { ThemeProvider } from "@/components/providers/ThemeProvider";
import { FeatureFlagProvider } from "@/components/providers/FeatureFlagProvider";
import { PinkModeProvider } from "@/components/providers/PinkModeProvider";
import { Toaster } from "@/components/ui/toast";
import { AcademicYearProvider } from "@/components/providers/AcademicYearProvider";
import { BreadcrumbProvider } from "@/hooks/useBreadcrumbs";
import FeaturebaseMessenger from "@/components/domain/FeatureBaseWidget";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <ConvexClientProvider>
        <html lang="en" suppressHydrationWarning>
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
          >
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <FeatureFlagProvider>
                <PinkModeProvider>
                  <AcademicYearProvider>
                    <BreadcrumbProvider>
                      {children}
                      <FeaturebaseMessenger />
                      <Toaster />
                    </BreadcrumbProvider>
                  </AcademicYearProvider>
                </PinkModeProvider>
              </FeatureFlagProvider>
            </ThemeProvider>
          </body>
        </html>
      </ConvexClientProvider>
    </ClerkProvider>
  );
}
